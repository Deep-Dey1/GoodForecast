version: '3.8'

services:
  # Jenkins CI/CD Server
  jenkins:
    image: jenkins/jenkins:lts
    container_name: weather-app-jenkins
    user: root
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/workspace
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
    networks:
      - devops-network
    restart: unless-stopped

  # SonarQube for Code Quality Analysis
  sonarqube:
    image: sonarqube:lts-community
    container_name: weather-app-sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
      - SONAR_JDBC_URL=jdbc:postgresql://sonarqube-db:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    networks:
      - devops-network
    depends_on:
      - sonarqube-db
    restart: unless-stopped

  # PostgreSQL Database for SonarQube
  sonarqube-db:
    image: postgres:14-alpine
    container_name: weather-app-sonarqube-db
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonar
    volumes:
      - sonarqube_db:/var/lib/postgresql/data
    networks:
      - devops-network
    restart: unless-stopped

  # Docker Registry (Optional - for private images)
  registry:
    image: registry:2
    container_name: weather-app-registry
    ports:
      - "5000:5000"
    volumes:
      - registry_data:/var/lib/registry
    networks:
      - devops-network
    restart: unless-stopped

networks:
  devops-network:
    driver: bridge

volumes:
  jenkins_home:
    driver: local
  sonarqube_data:
    driver: local
  sonarqube_logs:
    driver: local
  sonarqube_extensions:
    driver: local
  sonarqube_db:
    driver: local
  registry_data:
    driver: local
